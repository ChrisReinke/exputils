#!/bin/bash

# uses the exputils to run the gricad_run_repetition.sh script that each repetition has
# this is then registering OARJOBS to run the repetition script

NUM_PROCESSES=$EU_PRJ_GRICAD_DEFAULT_NUM_PROCESSES
WALLTIME=$EU_PRJ_GRICAD_DEFAULT_WALLTIME
IS_RERUN=False

ARGUMENTS=
while getopts ":n:w:r" arg; do
  case $arg in
    n) NUM_PROCESSES=$OPTARG;;
    w) WALLTIME=$OPTARG;;
    r) IS_RERUN=True;;
  esac
done

# hack to get this information to the gricad_add_job_run_repetition.sh script
# just save them as environment variables which are then read by the script
export EU_PRJ_GRICAD_DEFAULT_NUM_PROCESSES=$NUM_PROCESSES
export EU_PRJ_GRICAD_DEFAULT_WALLTIME=$WALLTIME

echo "Generate experiments ..."
eu_gricad_python -c "import exputils
exputils.manage.generate_experiment_files('experiment_configurations.ods', directory='./experiments/')"

echo "Add for each repetition a job ..."
eu_gricad_python -c "import exputils
exputils.manage.start_experiments(
  start_scripts='gricad_add_job_run_repetition.sh',
  parallel=False,
  is_chdir=True,
  verbose=False,
  is_rerun=$IS_RERUN)"

echo "Finished registering all repetitions at OAR."
