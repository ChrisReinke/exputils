#!/usr/bin/env bash

function usage {
  echo "Usage: $(basename $0) [-h]" 2>&1
  echo "Prints the status of all experiments and repetitions that are below the current directory."
  echo "  Options:"
  echo "   -h Shows this message."
}

# handle arguments
while getopts ":h" arg; do
  case $arg in
    h) usage ; exit 1 ;;
    ?) echo "Invalid option: -${OPTARG}."; usage ; exit 2 ;;
  esac
done
# get all arguments are given after the options handled by getopts
shift $(expr $OPTIND - 1 )
arguments=($@)

############################################

# save statistics about how many scripts have a certain status
declare -A statistics
statistics[todo]=0
statistics[running]=0
statistics[finished]=0
statistics[error]=0

# identify all status files
files=`find . -name *.status | sort -n`

# go through them
n_files=0
for file in $files; do
    # read last line with status
    status=$( tail -n 1 $file )

    # create array, which can be used to split a string based on ' '
    # use only the first term as status
    status=($status)
    status=${status[0]}

    # output status
    echo "$file - $status"

    ((n_files++))
    statistics[$status]=$((statistics[$status] + 1))
done

# print statistics
echo "total: ${n_files} | todo: ${statistics[todo]} | running: ${statistics[running]} | finished: ${statistics[finished]} | error: ${statistics[error]}"

