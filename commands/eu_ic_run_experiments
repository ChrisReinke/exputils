#!/usr/bin/env bash

# starts experiments on the inria gpu cluster
# takes

##########################
# Parameters
NUM_PROCESSES=$EU_PRJ_INRIA_CLUSTER_DEFAULT_NUM_PROCESSES
IS_RERUN=False
RUN_REPETITION_SCRIPT=$EU_PRJ_DEFAULT_RUN_REPETITION_SCRIPT
CLUSTER=$EU_PRJ_INRIA_CLUSTER_DEFAULT_CLUSTER
WALLTIME=$EU_PRJ_INRIA_CLUSTER_DEFAULT_WALLTIME
IC_ACCESS_MACHINE=$EU_PRJ_INRIA_CLUSTER_ACCESS_MACHINE
MACHINE=
##########################

while getopts ":n:r:m:w:c" arg; do
  case $arg in
    n) NUM_PROCESSES=$OPTARG;;
    r) IS_RERUN=True;;
    m) MACHINE=$OPTARG;;
    w) WALLTIME=$OPTARG;;
    c) CLUSTER=$OPTARG;;
  esac
done

echo "Generate experiments ..."
eu_inria_singularity python -c "
import exputils
exputils.manage.generate_experiment_files('experiment_configurations.ods', directory='./experiments/')"

# identify if something needs to run to only create a job if necessary
NUM_REPETITIONS_TO_EXECUTE=`eu_inria_singularity python -c "
import exputils
n_scripts = exputils.manage.get_number_of_scripts_to_execute(
  directory='./experiments/',
  start_scripts='$RUN_REPETITION_SCRIPT')

print(n_scripts)"`

if [ $NUM_REPETITIONS_TO_EXECUTE -gt 0 ]; then

  echo "Add job to OAR to run experiments ..."

  # create script to run the experiments
  echo -e "eu_inria_singularity python -c \"import exputils \n\
exputils.manage.start_experiments(\n\
  start_scripts='$RUN_REPETITION_SCRIPT',\n\
  parallel=$NUM_PROCESSES,\n\
  is_chdir=True,\n\
  verbose=False,\n\
  is_rerun=$IS_RERUN)\"" > oar_job_run_experiments.sh
  chmod +x oar_job_run_experiments.sh

  # add job to OAR, using the IC access machine (for example access2-cp)
  ssh $IC_ACCESS_MACHINE "source eu_activate $EU_ACTIVE_PRJ;
    cd `pwd`;
    oarsub -l /host=1/gpudevice=1,walltime=$WALLTIME -p \"cluster='$CLUSTER' $ADDMACHINE\" -t besteffort --stdout ic_run_experiments.out.log --stderr ic_run_experiments.err.log ./oar_job_run_experiments.sh"

  echo "Finished."

else
  echo "No experiments to run."
fi

